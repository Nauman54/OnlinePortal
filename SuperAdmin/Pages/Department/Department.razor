@page "/dept/department"
@using ClassLibraryDAL
@using ClassLibraryModel
@inject IJSRuntime JSRuntime
@attribute [Authorize(Roles = "Administrator")]

@using SuperAdmin.Data

<h3>Departments</h3>

<br />
<a href="dept/addnewdepartment" class="btn btn-outline-primary btn-sm">Add Department</a>
<br />

<br />
<table class="table table-bordered">
	<thead>
		<tr>
			<th>Sr#</th>
			<th>Name</th>
			<th>Organization</th>
			<th>IsActive</th>
			<th>Action</th>
		</tr>
	</thead>
	@foreach (var item in deptData)
	{
		<tr>
			<td>@item.DeptID</td>
			<td>@item.DeptName</td>
			<td>@item.OrgName</td>
			<td>@item.DeptIsActive</td>
			<td>
				<a href="dept/addnewdepartment/@item.DeptID" class="btn btn-outline-primary btn-sm">Edit</a>
				<button class="btn btn-outline-danger btn-sm" @onclick="(()=>ConfirmDelete(item.DeptID))">Delete</button>
			</td>
		</tr>
	}
</table>

@code {

	private List<DeptModel> deptData { get; set; } = new List<DeptModel>();

	protected override void OnInitialized()
	{
		LoadDept();
	}

	private void LoadDept()
	{
		deptData = DeptDAL.GetDept();
	}

	private async Task ConfirmDelete(int DeptID)
	{
		bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this item?");
		if (confirmed)
		{
			DeleteDept(DeptID);
		}
	}

	private void DeleteDept(int DeptID)
	{
		if (DeptDAL.DeleteDept(DeptID) == 1)
		{
			LoadDept();
		}
	}

}